%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: 4-AdvancedUse
  m_EditorClassIdentifier: 
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
      m_Tutorial: {fileID: 0}
      m_Icons:
        m_Items: []
      m_Image: {fileID: 2800000, guid: 404721c0f55789349b78a5bf8cd6f6a8, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
    - m_Type: 0
      m_Summary: Advanced use cases
      m_Description: "I would like to highlight one specific use case of light probes
        in this project. Remember in the previuos step we talked about not setting
        small objects as static, to save lightmap space and reduce bake times. Well
        if you would select objects in the tree cage, you could see that we are doing
        what we just said not to do. Why?\n\n1) In the <i>Hierarchy</i> windows search
        bar type in LOD00. Bamboo trees and rocks should be filtered out\n2) Select
        any of these objects and notice in the <i>Inspector</i> window, they are
        marked as static\n\nUsually if an object is marked static it will reserve
        space in the baked lightmap, will take longer to bake. If its not marked
        as static, light baking and probe baking process will just ignore the object
        as if it doesnt exist. \n\nIn this specific scenario, we have a lot of small
        objects together forming a large enough group so it would impact traveling
        light within the scene. In situations like these, we can mark the bamboo
        trees as static, but in the inspector window under Lighting->Recveive Global
        Illumination set Light Probes. This way trees will still receive lighting
        from light probes, but will no longer be invisible to the baking system,
        allowing them to contribute to indirect lighting.\n\nTake a look at the image
        above, more specifically at the wall right to the cage. Just above the line
        you should notice a slight green tint, representing light rays passing through
        leaves and hitting the wall. The effect is subtile, but realistic graphics
        are mostly composed of a lot of small details forming a greater picture.\n\nWhile
        it could be a lot to take in, simply remember that large groups of small
        objects could benefit from being static + receiving GI from light probes.
        See <a href=\"https://blogs.unity3d.com/2019/08/28/static-lighting-with-light-probes/\">here</a>
        for more info about this use case."
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
      m_Tutorial: {fileID: 0}
      m_Icons:
        m_Items: []
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
  m_CameraSettings:
    m_CameraMode: 1
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 2.9961002
    m_Pivot: {x: 30.793951, y: 2.950835, z: -3.603474}
    m_Rotation: {x: 0.012577176, y: 0.80292785, z: -0.016938362, w: 0.5957942}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 1
  m_NextButton: Next
  m_DoneButton: Done
  m_CompletedSound: {fileID: 0}
  m_autoAdvance: 0
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
